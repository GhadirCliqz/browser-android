System.register('mobile-freshtab/news', ['mobile-touch/longpress', 'core/templates'], function (_export) {
  /* global CustomEvent, window, document, CliqzLanguage, CliqzUtils, CliqzHandlebars, osAPI */

  'use strict';

  var LongPress, CliqzHandlebars, DEPENDENCY_STATUS, topSitesList, tempBlockedTopSites, newsVersion, displayedTopSitesCount, TOPSITES_LIMIT, News;

  function displayTopSites(list) {
    var isEditMode = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

    var blockedTopSites = CliqzUtils.getLocalStorage().getObject('blockedTopSites', []);

    list = deduplicateTopsites(list);

    list = list.filter(function (item) {
      return blockedTopSites.indexOf(item.mainDomain) === -1;
    });

    list = list.filter(function (item) {
      return tempBlockedTopSites.indexOf(item.mainDomain) === -1;
    });

    displayedTopSitesCount = Math.min(list.length, TOPSITES_LIMIT);

    list = list.map(function (r) {
      var details = CliqzUtils.getDetailsFromUrl(r.url);
      var logo = CliqzUtils.getLogoDetails(details);
      return {
        title: r.title,
        displayUrl: details.domain || r.title,
        url: r.url,
        text: logo.text,
        backgroundColor: logo.backgroundColor,
        buttonsClass: logo.buttonsClass,
        style: logo.style,
        mainDomain: r.mainDomain,
        baseDomain: r.url.match(/^(?:https?:\/\/)?(?:www\.)?([^\/]+)/i)[0],
        domain: r.url.match(/^(?:https?:\/\/)?(?:www\.)?([^\/]+)/i)[1]
      };
    });

    var isEmpty = list.length ? false : true;

    list = list.concat(Array(TOPSITES_LIMIT).fill(''));
    list = list.splice(0, TOPSITES_LIMIT);

    var topSites = CliqzHandlebars.tplCache.topsites;
    var div = document.getElementById('topSites');
    var theme = CLIQZEnvironment.getPref('incognito', false) === 'true' ? 'incognito' : 'standard';
    div.innerHTML = topSites({ isEmpty: isEmpty, isEditMode: isEditMode, list: list, theme: theme });

    CliqzUtils.addEventListenerToElements('#doneEditTopsites', 'click', function (_) {
      var blockedTopSites = CliqzUtils.getLocalStorage().getObject('blockedTopSites', []);
      CliqzUtils.getLocalStorage().setObject('blockedTopSites', blockedTopSites.concat(tempBlockedTopSites));
      tempBlockedTopSites = [];
      displayTopSites(topSitesList);
    });

    CliqzUtils.addEventListenerToElements('#cancelEditTopsites', 'click', function (_) {
      tempBlockedTopSites = [];
      displayTopSites(topSitesList);
    });

    CliqzUtils.addEventListenerToElements('.blockTopsite', 'click', function () {
      tempBlockedTopSites.push(this.getAttribute('mainDomain'));
      displayTopSites(topSitesList, true);
    });

    function onLongpress() {
      displayTopSites(topSitesList, true);
    }

    function onTap(element) {
      osAPI.openLink(element.getAttribute('url'));
      CliqzUtils.telemetry({
        type: 'home',
        action: 'click',
        target_type: 'topsites',
        target_index: element.dataset.index
      });
    }

    new LongPress('.topSitesLink', onLongpress, onTap);
  }

  function deduplicateTopsites(list) {
    var domains = {};
    return list.filter(function (item) {
      return !domains[item.mainDomain] && (domains[item.mainDomain] = true);
    });
  }

  function log() {
    CliqzUtils.log(arguments, 'News');
  }
  return {
    setters: [function (_mobileTouchLongpress) {
      LongPress = _mobileTouchLongpress['default'];
    }, function (_coreTemplates) {
      CliqzHandlebars = _coreTemplates['default'];
    }],
    execute: function () {
      DEPENDENCY_STATUS = {
        NOT_LOADED: 'NOT_LOADED',
        LOADED: 'LOADED',
        GIVE_UP: 'GIVE_UP',
        RETRY_LIMIT: 20,
        retryCount: {}
      };
      topSitesList = [];
      tempBlockedTopSites = [];
      TOPSITES_LIMIT = 5;
      News = {
        GENERIC_NEWS_URL: 'https://newbeta.cliqz.com/api/v1/rich-header?path=/map&bmresult=rotated-top-news.cliqz.com&lang=de,en&locale=de',
        _recentHistory: {},
        getNews: function getNews() {
          log('loading news');

          var method = 'GET',
              callback = function callback(data) {
            try {
              var sResponse = JSON.parse(data.responseText);
              newsVersion = sResponse.results[0].news_version;
              News.displayTopNews(sResponse.results[0].articles);
            } catch (e) {
              log(e);
            }
          },
              onerror = function onerror() {
            log('news error', arguments);
            setTimeout(News.getNews, 1500);
          },
              timeout = function timeout() {
            log('timeout error', arguments);
            News.getNews();
          },
              data = null,
              asynchronous = true;
          CliqzUtils.httpHandler(method, News.GENERIC_NEWS_URL, callback, onerror, timeout, data, asynchronous);
        },
        displayTopNews: function displayTopNews(top_news) {
          if (!top_news) {
            return;
          }

          top_news = top_news.map(function (r) {
            var details = CliqzUtils.getDetailsFromUrl(r.url);
            var logo = CliqzUtils.getLogoDetails(details);
            return {
              title: r.title,
              description: r.description,
              short_title: r.short_title || r.title,
              displayUrl: details.domain || r.title,
              url: r.url,
              type: r.type,
              text: logo.text,
              backgroundColor: logo.backgroundColor,
              buttonsClass: logo.buttonsClass,
              style: logo.style
            };
          });
          top_news = top_news.splice(0, 2);
          var dependencyStatus = News.getDependencyStatus('topnews');
          if (dependencyStatus === DEPENDENCY_STATUS.NOT_LOADED) {
            return setTimeout(News.displayTopNews, 100, top_news);
          } else if (dependencyStatus === DEPENDENCY_STATUS.GIVE_UP) {
            return;
          }
          var topNews = CliqzHandlebars.tplCache.topnews;
          var div = document.getElementById('topNews');
          div.innerHTML = topNews(top_news);
          CliqzUtils.addEventListenerToElements('.topNewsLink', 'click', function () {
            CliqzUtils.telemetry({
              type: 'home',
              action: 'click',
              target_type: 'topnews',
              target_index: this.dataset.index
            });
          });
          window.dispatchEvent(new CustomEvent('newsLoadingDone'));

          CliqzUtils.telemetry({
            'type': 'home',
            'action': 'display',
            'historysites': displayedTopSitesCount,
            'topnews_version': newsVersion
          });
        },

        getRecentHistory: function getRecentHistory(history) {
          history.results.forEach(function (result) {
            return News._recentHistory[result.url] = true;
          });
        },
        startPageHandler: function startPageHandler(list) {
          var dependencyStatus = News.getDependencyStatus('topsites');
          if (dependencyStatus === DEPENDENCY_STATUS.NOT_LOADED) {
            return setTimeout(News.startPageHandler, 100, list);
          } else if (dependencyStatus === DEPENDENCY_STATUS.GIVE_UP) {
            return;
          }

          News.getNews();

          topSitesList = [];
          var domain = undefined,
              domainArr = undefined,
              mainDomain = undefined;
          for (var i = 0; i < list.length; i++) {
            domain = list[i].url.match(/^(?:https?:\/\/)?(?:www\.)?([^\/]+)/i)[1];
            domainArr = domain.split('.');
            mainDomain = domainArr[domainArr.length - 2].substr(0, 10);
            mainDomain = mainDomain.charAt(0).toUpperCase() + mainDomain.slice(1);
            list[i].mainDomain = mainDomain;
            topSitesList.push(list[i]);
          }

          displayTopSites(topSitesList);
        },
        // wait for logos, templates, and locale to be loaded
        getDependencyStatus: function getDependencyStatus(template) {
          if (DEPENDENCY_STATUS.retryCount[template] === undefined) {
            DEPENDENCY_STATUS.retryCount[template] = 0;
          }
          if (!CliqzUtils.BRANDS_DATABASE.buttons || !CliqzHandlebars.tplCache[template]) {
            return DEPENDENCY_STATUS.retryCount[template]++ < DEPENDENCY_STATUS.RETRY_LIMIT ? DEPENDENCY_STATUS.NOT_LOADED : DEPENDENCY_STATUS.GIVE_UP;
          }
          DEPENDENCY_STATUS.retryCount[template] = 0;
          return DEPENDENCY_STATUS.LOADED;
        }
      };

      _export('default', News);
    }
  };
});
//# sourceMappingURL=data:application/json;base64,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QUFpQixDQUFDLFVBQVUsR0FBRyxpQkFBaUIsQ0FBQyxPQUFPLENBQUM7V0FDNUk7QUFDRCwyQkFBaUIsQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQzNDLGlCQUFPLGlCQUFpQixDQUFDLE1BQU0sQ0FBQztTQUNqQztPQUNGOzt5QkFLYyxJQUFJIiwiZmlsZSI6Im1vYmlsZS1mcmVzaHRhYi9uZXdzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFsIEN1c3RvbUV2ZW50LCB3aW5kb3csIGRvY3VtZW50LCBDbGlxekxhbmd1YWdlLCBDbGlxelV0aWxzLCBDbGlxekhhbmRsZWJhcnMsIG9zQVBJICovXG5cbmltcG9ydCBMb25nUHJlc3MgZnJvbSAnbW9iaWxlLXRvdWNoL2xvbmdwcmVzcyc7XG5pbXBvcnQgQ2xpcXpIYW5kbGViYXJzIGZyb20gXCJjb3JlL3RlbXBsYXRlc1wiO1xuXG52YXIgREVQRU5ERU5DWV9TVEFUVVMgPSB7XG4gIE5PVF9MT0FERUQ6ICdOT1RfTE9BREVEJyxcbiAgTE9BREVEOiAnTE9BREVEJyxcbiAgR0lWRV9VUDogJ0dJVkVfVVAnLFxuICBSRVRSWV9MSU1JVDogMjAsXG4gIHJldHJ5Q291bnQ6IHt9XG59O1xuXG52YXIgdG9wU2l0ZXNMaXN0ID0gW10sIHRlbXBCbG9ja2VkVG9wU2l0ZXMgPSBbXSwgbmV3c1ZlcnNpb24sIGRpc3BsYXllZFRvcFNpdGVzQ291bnQsIFRPUFNJVEVTX0xJTUlUID0gNTtcblxuZnVuY3Rpb24gZGlzcGxheVRvcFNpdGVzIChsaXN0LCBpc0VkaXRNb2RlID0gZmFsc2UpIHtcblxuICBjb25zdCBibG9ja2VkVG9wU2l0ZXMgPSBDbGlxelV0aWxzLmdldExvY2FsU3RvcmFnZSgpLmdldE9iamVjdCgnYmxvY2tlZFRvcFNpdGVzJywgW10pO1xuXG4gIGxpc3QgPSBkZWR1cGxpY2F0ZVRvcHNpdGVzKGxpc3QpO1xuXG4gIGxpc3QgPSBsaXN0LmZpbHRlcihpdGVtID0+IGJsb2NrZWRUb3BTaXRlcy5pbmRleE9mKGl0ZW0ubWFpbkRvbWFpbikgPT09IC0xKTtcblxuICBsaXN0ID0gbGlzdC5maWx0ZXIoaXRlbSA9PiB0ZW1wQmxvY2tlZFRvcFNpdGVzLmluZGV4T2YoaXRlbS5tYWluRG9tYWluKSA9PT0gLTEpO1xuXG4gIGRpc3BsYXllZFRvcFNpdGVzQ291bnQgPSBNYXRoLm1pbihsaXN0Lmxlbmd0aCwgVE9QU0lURVNfTElNSVQpO1xuXG4gIGxpc3QgPSBsaXN0Lm1hcChmdW5jdGlvbiAocikge1xuICAgIGNvbnN0IGRldGFpbHMgPSBDbGlxelV0aWxzLmdldERldGFpbHNGcm9tVXJsKHIudXJsKTtcbiAgICBjb25zdCBsb2dvID0gQ2xpcXpVdGlscy5nZXRMb2dvRGV0YWlscyhkZXRhaWxzKTtcbiAgICByZXR1cm4ge1xuICAgICAgdGl0bGU6IHIudGl0bGUsXG4gICAgICBkaXNwbGF5VXJsOiBkZXRhaWxzLmRvbWFpbiB8fCByLnRpdGxlLFxuICAgICAgdXJsOiByLnVybCxcbiAgICAgIHRleHQ6IGxvZ28udGV4dCxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogbG9nby5iYWNrZ3JvdW5kQ29sb3IsXG4gICAgICBidXR0b25zQ2xhc3M6IGxvZ28uYnV0dG9uc0NsYXNzLFxuICAgICAgc3R5bGU6IGxvZ28uc3R5bGUsXG4gICAgICBtYWluRG9tYWluOiByLm1haW5Eb21haW4sXG4gICAgICBiYXNlRG9tYWluOiByLnVybC5tYXRjaCgvXig/Omh0dHBzPzpcXC9cXC8pPyg/Ond3d1xcLik/KFteXFwvXSspL2kpWzBdLFxuICAgICAgZG9tYWluOiByLnVybC5tYXRjaCgvXig/Omh0dHBzPzpcXC9cXC8pPyg/Ond3d1xcLik/KFteXFwvXSspL2kpWzFdXG4gICAgfTtcbiAgfSk7XG5cbiAgY29uc3QgaXNFbXB0eSA9IGxpc3QubGVuZ3RoID8gZmFsc2UgOiB0cnVlO1xuXG4gIGxpc3QgPSBsaXN0LmNvbmNhdChBcnJheShUT1BTSVRFU19MSU1JVCkuZmlsbCgnJykpO1xuICBsaXN0ID0gbGlzdC5zcGxpY2UoMCwgVE9QU0lURVNfTElNSVQpO1xuXG4gIGNvbnN0IHRvcFNpdGVzID0gQ2xpcXpIYW5kbGViYXJzLnRwbENhY2hlLnRvcHNpdGVzO1xuICBjb25zdCBkaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG9wU2l0ZXMnKTtcbiAgY29uc3QgdGhlbWUgPSAoQ0xJUVpFbnZpcm9ubWVudC5nZXRQcmVmKCdpbmNvZ25pdG8nLCBmYWxzZSkgPT09ICd0cnVlJyA/ICdpbmNvZ25pdG8nIDogJ3N0YW5kYXJkJyk7XG4gIGRpdi5pbm5lckhUTUwgPSB0b3BTaXRlcyh7aXNFbXB0eSwgaXNFZGl0TW9kZSwgbGlzdCwgdGhlbWV9KTtcblxuXG4gIENsaXF6VXRpbHMuYWRkRXZlbnRMaXN0ZW5lclRvRWxlbWVudHMoJyNkb25lRWRpdFRvcHNpdGVzJywgJ2NsaWNrJywgXyA9PiB7XG4gICAgY29uc3QgYmxvY2tlZFRvcFNpdGVzID0gQ2xpcXpVdGlscy5nZXRMb2NhbFN0b3JhZ2UoKS5nZXRPYmplY3QoJ2Jsb2NrZWRUb3BTaXRlcycsIFtdKTtcbiAgICBDbGlxelV0aWxzLmdldExvY2FsU3RvcmFnZSgpLnNldE9iamVjdCgnYmxvY2tlZFRvcFNpdGVzJywgYmxvY2tlZFRvcFNpdGVzLmNvbmNhdCh0ZW1wQmxvY2tlZFRvcFNpdGVzKSk7XG4gICAgdGVtcEJsb2NrZWRUb3BTaXRlcyA9IFtdO1xuICAgIGRpc3BsYXlUb3BTaXRlcyh0b3BTaXRlc0xpc3QpO1xuICB9KTtcblxuICBDbGlxelV0aWxzLmFkZEV2ZW50TGlzdGVuZXJUb0VsZW1lbnRzKCcjY2FuY2VsRWRpdFRvcHNpdGVzJywgJ2NsaWNrJywgXyA9PiB7XG4gICAgdGVtcEJsb2NrZWRUb3BTaXRlcyA9IFtdO1xuICAgIGRpc3BsYXlUb3BTaXRlcyh0b3BTaXRlc0xpc3QpO1xuICB9KTtcblxuICBDbGlxelV0aWxzLmFkZEV2ZW50TGlzdGVuZXJUb0VsZW1lbnRzKCcuYmxvY2tUb3BzaXRlJywgJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgIHRlbXBCbG9ja2VkVG9wU2l0ZXMucHVzaCh0aGlzLmdldEF0dHJpYnV0ZSgnbWFpbkRvbWFpbicpKTtcbiAgICBkaXNwbGF5VG9wU2l0ZXModG9wU2l0ZXNMaXN0LCB0cnVlKTtcbiAgfSk7XG5cbiAgZnVuY3Rpb24gb25Mb25ncHJlc3MgKCkge1xuICAgIGRpc3BsYXlUb3BTaXRlcyh0b3BTaXRlc0xpc3QsIHRydWUpO1xuICB9XG5cbiAgZnVuY3Rpb24gb25UYXAgKGVsZW1lbnQpIHtcbiAgICBvc0FQSS5vcGVuTGluayhlbGVtZW50LmdldEF0dHJpYnV0ZSgndXJsJykpO1xuICAgIENsaXF6VXRpbHMudGVsZW1ldHJ5KHtcbiAgICAgIHR5cGU6ICdob21lJyxcbiAgICAgIGFjdGlvbjogJ2NsaWNrJyxcbiAgICAgIHRhcmdldF90eXBlOiAndG9wc2l0ZXMnLFxuICAgICAgdGFyZ2V0X2luZGV4OiBlbGVtZW50LmRhdGFzZXQuaW5kZXhcbiAgICB9KTtcbiAgfVxuXG4gIG5ldyBMb25nUHJlc3MoJy50b3BTaXRlc0xpbmsnLCBvbkxvbmdwcmVzcywgb25UYXApO1xuXG59XG5cbmZ1bmN0aW9uIGRlZHVwbGljYXRlVG9wc2l0ZXMobGlzdCkge1xuICBsZXQgZG9tYWlucyA9IHt9O1xuICByZXR1cm4gbGlzdC5maWx0ZXIoaXRlbSA9PiAhZG9tYWluc1tpdGVtLm1haW5Eb21haW5dICYmIChkb21haW5zW2l0ZW0ubWFpbkRvbWFpbl0gPSB0cnVlKSk7XG59XG5cbnZhciBOZXdzID0ge1xuICBHRU5FUklDX05FV1NfVVJMOiAnaHR0cHM6Ly9uZXdiZXRhLmNsaXF6LmNvbS9hcGkvdjEvcmljaC1oZWFkZXI/cGF0aD0vbWFwJmJtcmVzdWx0PXJvdGF0ZWQtdG9wLW5ld3MuY2xpcXouY29tJmxhbmc9ZGUsZW4mbG9jYWxlPWRlJyxcbiAgX3JlY2VudEhpc3Rvcnk6IHt9LFxuICBnZXROZXdzOiBmdW5jdGlvbigpIHtcbiAgICBsb2coJ2xvYWRpbmcgbmV3cycpO1xuXG4gICAgbGV0IG1ldGhvZCA9ICdHRVQnLFxuICAgIGNhbGxiYWNrID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3Qgc1Jlc3BvbnNlID0gSlNPTi5wYXJzZShkYXRhLnJlc3BvbnNlVGV4dCk7XG4gICAgICAgICAgICBuZXdzVmVyc2lvbiA9IHNSZXNwb25zZS5yZXN1bHRzWzBdLm5ld3NfdmVyc2lvbjtcbiAgICAgICAgICAgIE5ld3MuZGlzcGxheVRvcE5ld3Moc1Jlc3BvbnNlLnJlc3VsdHNbMF0uYXJ0aWNsZXMpO1xuICAgICAgICB9IGNhdGNoKGUpIHtcbiAgICAgICAgICAgIGxvZyhlKTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgb25lcnJvciA9IGZ1bmN0aW9uKCkge1xuICAgICAgbG9nKCduZXdzIGVycm9yJywgYXJndW1lbnRzKTtcbiAgICAgIHNldFRpbWVvdXQoTmV3cy5nZXROZXdzLCAxNTAwKTtcbiAgICB9LFxuICAgIHRpbWVvdXQgPSBmdW5jdGlvbigpIHtcbiAgICAgIGxvZygndGltZW91dCBlcnJvcicsIGFyZ3VtZW50cyk7XG4gICAgICBOZXdzLmdldE5ld3MoKTtcbiAgICB9LFxuICAgIGRhdGEgPSBudWxsLFxuICAgIGFzeW5jaHJvbm91cyA9IHRydWU7XG4gICAgQ2xpcXpVdGlscy5odHRwSGFuZGxlcihtZXRob2QsIE5ld3MuR0VORVJJQ19ORVdTX1VSTCwgY2FsbGJhY2ssIG9uZXJyb3IsIHRpbWVvdXQsIGRhdGEsIGFzeW5jaHJvbm91cyk7XG5cbiAgfSxcbiAgZGlzcGxheVRvcE5ld3M6IGZ1bmN0aW9uKHRvcF9uZXdzKSB7XG4gICAgaWYoIXRvcF9uZXdzKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdG9wX25ld3MgPSB0b3BfbmV3cy5tYXAoZnVuY3Rpb24ocil7XG4gICAgICBjb25zdCBkZXRhaWxzID0gQ2xpcXpVdGlscy5nZXREZXRhaWxzRnJvbVVybChyLnVybCk7XG4gICAgICBjb25zdCBsb2dvID0gQ2xpcXpVdGlscy5nZXRMb2dvRGV0YWlscyhkZXRhaWxzKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHRpdGxlOiByLnRpdGxlLFxuICAgICAgICBkZXNjcmlwdGlvbjogci5kZXNjcmlwdGlvbixcbiAgICAgICAgc2hvcnRfdGl0bGU6IHIuc2hvcnRfdGl0bGUgfHwgci50aXRsZSxcbiAgICAgICAgZGlzcGxheVVybDogZGV0YWlscy5kb21haW4gfHwgci50aXRsZSxcbiAgICAgICAgdXJsOiByLnVybCxcbiAgICAgICAgdHlwZTogci50eXBlLFxuICAgICAgICB0ZXh0OiBsb2dvLnRleHQsXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogbG9nby5iYWNrZ3JvdW5kQ29sb3IsXG4gICAgICAgIGJ1dHRvbnNDbGFzczogbG9nby5idXR0b25zQ2xhc3MsXG4gICAgICAgIHN0eWxlOiBsb2dvLnN0eWxlXG4gICAgICB9O1xuICAgIH0pO1xuICAgIHRvcF9uZXdzID0gdG9wX25ld3Muc3BsaWNlKDAsIDIpO1xuICAgIGNvbnN0IGRlcGVuZGVuY3lTdGF0dXMgPSBOZXdzLmdldERlcGVuZGVuY3lTdGF0dXMoJ3RvcG5ld3MnKTtcbiAgICBpZihkZXBlbmRlbmN5U3RhdHVzID09PSBERVBFTkRFTkNZX1NUQVRVUy5OT1RfTE9BREVEKSB7XG4gICAgICByZXR1cm4gc2V0VGltZW91dChOZXdzLmRpc3BsYXlUb3BOZXdzLCAxMDAsIHRvcF9uZXdzKTtcbiAgICB9IGVsc2UgaWYoZGVwZW5kZW5jeVN0YXR1cyA9PT0gREVQRU5ERU5DWV9TVEFUVVMuR0lWRV9VUCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCB0b3BOZXdzID0gQ2xpcXpIYW5kbGViYXJzLnRwbENhY2hlLnRvcG5ld3M7XG4gICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RvcE5ld3MnKTtcbiAgICBkaXYuaW5uZXJIVE1MID0gdG9wTmV3cyh0b3BfbmV3cyk7XG4gICAgQ2xpcXpVdGlscy5hZGRFdmVudExpc3RlbmVyVG9FbGVtZW50cygnLnRvcE5ld3NMaW5rJywgJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgQ2xpcXpVdGlscy50ZWxlbWV0cnkoe1xuICAgICAgICB0eXBlOiAnaG9tZScsXG4gICAgICAgIGFjdGlvbjogJ2NsaWNrJyxcbiAgICAgICAgdGFyZ2V0X3R5cGU6ICd0b3BuZXdzJyxcbiAgICAgICAgdGFyZ2V0X2luZGV4OiB0aGlzLmRhdGFzZXQuaW5kZXhcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIHdpbmRvdy5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCgnbmV3c0xvYWRpbmdEb25lJykpO1xuXG4gICAgQ2xpcXpVdGlscy50ZWxlbWV0cnkoe1xuICAgICAgJ3R5cGUnOiAnaG9tZScsXG4gICAgICAnYWN0aW9uJzogJ2Rpc3BsYXknLFxuICAgICAgJ2hpc3RvcnlzaXRlcyc6IGRpc3BsYXllZFRvcFNpdGVzQ291bnQsXG4gICAgICAndG9wbmV3c192ZXJzaW9uJzogbmV3c1ZlcnNpb25cbiAgICB9KTtcbiAgfSxcblxuICBnZXRSZWNlbnRIaXN0b3J5OiBmdW5jdGlvbiAoaGlzdG9yeSkge1xuICAgIGhpc3RvcnkucmVzdWx0cy5mb3JFYWNoKHJlc3VsdCA9PiBOZXdzLl9yZWNlbnRIaXN0b3J5W3Jlc3VsdC51cmxdID0gdHJ1ZSk7XG4gIH0sXG4gIHN0YXJ0UGFnZUhhbmRsZXI6IGZ1bmN0aW9uIChsaXN0KSB7XG4gICAgY29uc3QgZGVwZW5kZW5jeVN0YXR1cyA9IE5ld3MuZ2V0RGVwZW5kZW5jeVN0YXR1cygndG9wc2l0ZXMnKTtcbiAgICBpZihkZXBlbmRlbmN5U3RhdHVzID09PSBERVBFTkRFTkNZX1NUQVRVUy5OT1RfTE9BREVEKSB7XG4gICAgICByZXR1cm4gc2V0VGltZW91dChOZXdzLnN0YXJ0UGFnZUhhbmRsZXIsIDEwMCwgbGlzdCk7XG4gICAgfSBlbHNlIGlmKGRlcGVuZGVuY3lTdGF0dXMgPT09IERFUEVOREVOQ1lfU1RBVFVTLkdJVkVfVVApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBOZXdzLmdldE5ld3MoKTtcblxuICAgIHRvcFNpdGVzTGlzdCA9IFtdO1xuICAgIGxldCBkb21haW4sIGRvbWFpbkFyciwgbWFpbkRvbWFpbjtcbiAgICBmb3IodmFyIGk9MDsgaTxsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICBkb21haW4gPSBsaXN0W2ldLnVybC5tYXRjaCgvXig/Omh0dHBzPzpcXC9cXC8pPyg/Ond3d1xcLik/KFteXFwvXSspL2kpWzFdO1xuICAgICAgZG9tYWluQXJyID0gZG9tYWluLnNwbGl0KCcuJyk7XG4gICAgICBtYWluRG9tYWluID0gZG9tYWluQXJyW2RvbWFpbkFyci5sZW5ndGgtMl0uc3Vic3RyKDAsIDEwKTtcbiAgICAgIG1haW5Eb21haW4gPSBtYWluRG9tYWluLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgbWFpbkRvbWFpbi5zbGljZSgxKTtcbiAgICAgIGxpc3RbaV0ubWFpbkRvbWFpbiA9IG1haW5Eb21haW47XG4gICAgICB0b3BTaXRlc0xpc3QucHVzaChsaXN0W2ldKTtcbiAgICB9XG5cbiAgICBkaXNwbGF5VG9wU2l0ZXModG9wU2l0ZXNMaXN0KTtcbiAgfSxcbiAgLy8gd2FpdCBmb3IgbG9nb3MsIHRlbXBsYXRlcywgYW5kIGxvY2FsZSB0byBiZSBsb2FkZWRcbiAgZ2V0RGVwZW5kZW5jeVN0YXR1czogZnVuY3Rpb24odGVtcGxhdGUpIHtcbiAgICBpZihERVBFTkRFTkNZX1NUQVRVUy5yZXRyeUNvdW50W3RlbXBsYXRlXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBERVBFTkRFTkNZX1NUQVRVUy5yZXRyeUNvdW50W3RlbXBsYXRlXSA9IDA7XG4gICAgfVxuICAgIGlmKCFDbGlxelV0aWxzLkJSQU5EU19EQVRBQkFTRS5idXR0b25zIHx8ICFDbGlxekhhbmRsZWJhcnMudHBsQ2FjaGVbdGVtcGxhdGVdKSB7XG4gICAgICByZXR1cm4gREVQRU5ERU5DWV9TVEFUVVMucmV0cnlDb3VudFt0ZW1wbGF0ZV0rKyA8IERFUEVOREVOQ1lfU1RBVFVTLlJFVFJZX0xJTUlUID8gREVQRU5ERU5DWV9TVEFUVVMuTk9UX0xPQURFRCA6IERFUEVOREVOQ1lfU1RBVFVTLkdJVkVfVVA7XG4gICAgfVxuICAgIERFUEVOREVOQ1lfU1RBVFVTLnJldHJ5Q291bnRbdGVtcGxhdGVdID0gMDtcbiAgICByZXR1cm4gREVQRU5ERU5DWV9TVEFUVVMuTE9BREVEO1xuICB9XG59O1xuXG5mdW5jdGlvbiBsb2coKSB7XG4gIENsaXF6VXRpbHMubG9nKGFyZ3VtZW50cywgJ05ld3MnKTtcbn1cbmV4cG9ydCBkZWZhdWx0IE5ld3M7XG4iXX0=