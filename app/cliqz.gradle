def props = project.properties.withDefault { "" }

if (project.hasProperty('Browser.storeFile')) {
    android {
        signingConfigs {
            release {
                storeFile file(props['Browser.storeFile'])
                storePassword props['Browser.storePassword']
                keyAlias props['Browser.keyAlias']
                keyPassword props['Browser.keyPassword']
            }
        }

        buildTypes {
            release {
                signingConfig signingConfigs.release
            }
        }
    }
}

android {
    def topics = props["Browser.topicARNs"].tokenize(',').collect { "\"${it}\"" }.join(',')

    defaultConfig {
        buildConfigField 'String', 'APPLICATION_ARN', "\"${props['Browser.applicationARN']}\""
        buildConfigField 'String[]', 'TOPIC_ARNS', "new String[] { ${topics} }"
        buildConfigField 'String', 'AMAZON_ACCOUNT_ID', "\"${props['Browser.amazonAccountID']}\""
        buildConfigField 'String', 'AMAZON_IDENTITY_POOL_ID', "\"${props['Browser.amazonIdentityPoolID']}\""
        buildConfigField 'String', 'AMAZON_UNAUTH_ROLE_ARN', "\"${props['Browser.amazonUnauthRoleARN']}\""
        buildConfigField 'String', 'AMAZON_AUTH_ROLE_ARN', "\"${props['Browser.amazonAuthRoleARN']}\""
    }

    signingConfigs {
        debug {
            storeFile file('../debug.keystore')
            storePassword 'android'
            keyAlias 'debug'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
    }
}